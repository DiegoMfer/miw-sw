spring.application.name=gateway

# Server configuration
server.port=8080

# Enable HTTPS
server.ssl.enabled=true
server.ssl.key-store=classpath:gateway-keystore.p12
server.ssl.key-store-password=changeit
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=gateway

# Service URLs for Docker Compose environment
service.user.url=http://user-service:8086
service.search.url=http://search-service:8084
service.history.url=http://history-service:8085
service.aggregator.url=http://aggregator:8087

# Auth Service Configuration for Production
# Ensure the AuthenticationFilter uses the correct URL for token validation.
# The SERVICE_AUTH_URL env var in docker-compose sets service.auth.url.
# This explicitly sets auth.service.url for the filter.
auth.service.url=http://auth-service:8088

# The validate endpoint can rely on the default from application.properties or be specified here if different for prod.
# auth.service.validate-endpoint=/api/auth/validate

# Enable actuator endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# CORS configuration for production
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=https://searchmiw.com
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

# Increase the timeout
spring.cloud.gateway.httpclient.connect-timeout=10000
spring.cloud.gateway.httpclient.response-timeout=10000

# Public paths that don't require authentication
auth.public.paths=/api/auth/login,/api/auth/register,/api/health,/swagger-ui,/api-docs,/v3/api-docs,/api/docs,/api/search,/api/graphiql/**,/api/aggregator-health/**
