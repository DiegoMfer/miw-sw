config:
  target: "http://localhost:8080" # Gateway URL from README
  phases:
    - duration: 10
      arrivalRate: 1
      name: "Warm-up phase - 1 user per second"
    - duration: 30
      arrivalRate: 5
      rampTo: 10
      name: "Ramp-up phase - 5 to 10 users per second"
    - duration: 60
      arrivalRate: 10
      name: "Sustained load phase - 10 users per second"
  defaults:
    headers:
      Content-Type: "application/json"

scenarios:
  - name: "User Registration, Search, and Check History"
    flow:
      # Step 1: User Registration and Capture Token
      - post:
          url: "/api/auth/register"
          json:
            name: "Test User"
            email: "test{{ $randomString(13) }}@example.com" # Dynamic email to avoid conflicts
            password: "password123"
          capture:
            - json: "$.token"
              as: "authToken"
      - log: "Captured auth token from registration: {{ authToken }}" # For debugging

      # Step 2: Perform a Search (Authenticated)
      - get:
          url: "/api/search?query=artillery&language=en" # Example search query
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - contentType: json
      - think: 1 # Pause for 1 second to allow history to be processed

      # Step 3: Check History (Authenticated)
      - get:
          url: "/api/history"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: 200
            - contentType: json
            # Optionally, add more specific checks for the history content
            # For example, if history returns an array and the first item is the search
            # - hasProperty: "0.query"
            # - equals:
            #     - "{{ someVariableHoldingTheLastQuery }}" # This would require capturing the query
            #     - "artillery"

